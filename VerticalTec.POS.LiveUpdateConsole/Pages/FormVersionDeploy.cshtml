@page "{batchId?}"
@model FormVersionDeployModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf

<form method="post">
    <h3>ข้อมูลเวอร์ชั่น</h3>
    <div class="form-group">
        <label for="inputVersion">เวอร์ชั่น</label>
        @(Html.DevExtreme().TextBoxFor(m => m.VersionDeploy.ProgramVersion).ID("inputVersion").Width(500))
    </div>
    <div class="form-group">
        <label for="inputFileUrl">อัพโหลด</label>
        @(Html.DevExtreme().TextBoxFor(m => m.VersionDeploy.FileUrl).ID("inputFileUrl").Width(500).ReadOnly(true))
        @(Html.DevExtreme().FileUploader()
                    .ID("fileUpload")
                    .Name("file")
                    .ChunkSize(1000000)
                    .AllowedFileExtensions(new[] { ".zip"})
                    .OnUploadStarted("onUploadStarted")
                    .OnUploadError("onUploadError")
                    .OnFilesUploaded("onUploaded")
                    .OnBeforeSend("beforeSend")
                    .UploadUrl(Url.Page(null, "UploadPatch"))
                )
    </div>
    <h3>ข้อมูลสาขา</h3>
    <div class="form-group">
        <div class="form-row">
            <div class="form-group col-md-4 mr-4">
                <label for="slBrand">แบรนด์</label>
                @(Html.DevExtreme()
                        .SelectBox()
                        .ID("slBrand")
                        .DataSource(d => d.Mvc()
                        .Controller("Branch")
                        .LoadAction("GetBrands"))
                        .DisplayExpr("BrandName")
                        .ValueExpr("BrandId")
                        .Placeholder("-- กรุณาเลือกแบรนด์ --"))
            </div>
            <div class="form-group">
                <label for="slBrand">ประเภทสาขา</label>
                @(Html.DevExtreme()
                        .SelectBox()
                        .ID("slShopCat")
                        .Width(500)
                        .DataSource(d => d.Mvc().Controller("Branch").LoadAction("GetShopsCat").Key("ShopId"))
                        .SearchEnabled(true).ShowClearButton(true)
                        .DisplayExpr("ShopCateName")
                        .ValueExpr("ShopCateId")
                        .OnSelectionChanged("onShopCateSelectionChange").Placeholder("-- แสดงทั้งหมด --"))
            </div>
        </div>
        <div class="form-group">
            @(Html.DevExtreme().DataGrid<ShopData>()
                        .ID("shop-datagrid")
                        .ShowBorders(true)
                        .DataSource(d => d.Mvc().Controller("Branch").LoadAction("GetShops").Key("ShopId"))
                        .Columns(columns => {
                            columns.AddFor(o => o.ShopCode).Caption("รหัสสาขา");
                            columns.AddFor(o => o.ShopName).Caption("ชื่อสาขา");
                        })
                        .HoverStateEnabled(true)
                        .Paging(p => p.PageSize(100))
                        .FilterRow(f => f.Visible(true))
                        .Scrolling(s => s.Mode(GridScrollingMode.Standard))
                        .Height(400)
                        .Selection(s => s.Mode(SelectionMode.Multiple)
                        .ShowCheckBoxesMode(GridSelectionShowCheckBoxesMode.Always).Deferred(true))
                        .SelectionFilter(new object[] { "Selected", "=", true})
                    )
        </div>
    </div>
    <div class="form-row justify-content-center">
        <div class="form-group mr-4">
            @(Html.DevExtreme().Button().Text("บันทึก").UseSubmitBehavior(true))
        </div>
        <div class="form-group">
            @(Html.DevExtreme().Button().Type(ButtonType.Success).Text("อัพเดต"))
        </div>
    </div>
</form>

<script>

    var uploadFileName = '';

    $(function () {
        var slBrand = $("#slBrand").dxSelectBox("instance");
        slBrand.getDataSource().load().done(function (data) {
            slBrand.option('value', data[0].BrandId);
        });
    })

    function beforeSend(e) {
        e.request.setRequestHeader('RequestVerificationToken', "@Xsrf.GetAndStoreTokens(Model.HttpContext).RequestToken");
    }

    function onShopCateSelectionChange(e) {
        var shopDataGrid = $("#shop-datagrid").dxDataGrid('instance');
        var dataSource = shopDataGrid.getDataSource();
        if (e.selectedItem == null) {
            dataSource.filter(null);
            dataSource.reload();
        } else {
            var shopCatId = e.selectedItem.ShopCateId;
            dataSource.filter(["ShopCateId", "=", shopCatId]);
            dataSource.load();
        }
    }

    function onUploadStarted(e) {
        uploadFileName = e.file.name;
    }

    function onUploaded(e) {
        var fileUrl = '@($"{HttpContext.Request.Scheme}://{HttpContext.Request.Host}/Patch/")' + uploadFileName;
        $('#inputFileUrl').dxTextBox("instance").option('value', fileUrl);
    }

    function onUploadError() {
        DevExpress.ui.dialog.alert("File is too large or not allowed file extension", "Error");
    }
</script>