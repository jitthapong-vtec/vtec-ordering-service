@page
@model VerticalTec.POS.Report.Dashboard.Pages.SummaryReportModel
@{
    ViewData["Title"] = "Summary";
}
<div class="m-2">
    <div class="card card-space-bottom">
        <div class="card-header">
            <div class="row">
                <div class="col">
                    <b>Summary Sale</b>
                </div>
                <div class="col-3 float-right">
                </div>
            </div>
        </div>
        <div class="card-body">
            <div id="productSale"></div><br />
            <div id="productSalePieContainer" style="margin-left:auto; margin-right:auto; margin-bottom:1em;" class="collapse">
                @(Html.DevExtreme().PieChart()
    .ID("productSalePie")
    .Palette(VizPalette.Bright)
    .Legend(l => l.Visible(false))
    .ResolveLabelOverlapping(PieChartResolveLabelOverlapping.Shift)
    .Series(s =>
    s.Add()
.ArgumentField("productCatName")
.ValueField("percentage")
.Label(l => l
        .Visible(true)
        .Font(f => f.Size(10))
        .Connector(c => c
            .Visible(true)
            .Width(0.5)
        )
        .Position(PieChartLabelPosition.Columns)
        .CustomizeText("getPieChartLabel")))
    .Title(t => t.Text("Item Sales").Font(f => f.Size(20)))
                )
            </div>
            <div id="promotion"></div><br />
            <div id="stat"></div><br />
            <div id="saleMode"></div>
        </div>
    </div>
    <div class="card card-space-bottom">
        <b class="card-header">Tender</b><div class="card-body" id="tender">
        </div>
    </div>
    <div class="card card-space-bottom">
        <b class="card-header">Audit</b><div class="card-body" id="audit">
        </div>
    </div>
</div>

<script type="text/javascript">
    var summaryDone = false;
    var tenderDone = false;
    var auditDone = false;

    function pageLoaded() { }

    function getPieChartLabel(arg) {
        return arg.argumentText + "<br />(" + arg.valueText + "%)";
    }

    function loadReport() {
        let criteria = getCriteria();
        let shopIds = criteria.shopIds.join(",");
        let shopName = criteria.shopName;
        let fromDate = moment(criteria.fromDate);
        let toDate = moment(criteria.toDate);
        let staffId = JSON.parse(localStorage.getItem('staff')).staffId;
        let param = '?staffId=' + staffId + '&shopIds=' + shopIds + '&startDate=' + fromDate.toISOString() + '&endDate=' + toDate.toISOString();

        $("#reportHeader").html("<b>" + shopName  + "</b></br>" + moment(fromDate).format("D/M/Y") + " - " + moment(toDate).format("D/M/Y"));

        showLoading();

        $.getJSON('@Url.Content("~/api/report/summary")' + param, function (result) {
            //console.log('summary', result);
            var data = result.data;
            $("#productSale").html(data.saleByGroupHtml);
            $("#promotion").html(data.promoDataHtml);
            $("#stat").html(data.statDataHtml);
            var productSalePie = $("#productSalePie").dxPieChart("instance");
            if (data.productSaleChartData.length > 0) {
                productSalePie.option("dataSource", data.productSaleChartData);
                $('#productSalePieContainer').collapse('show');
            } else {
                $('#productSalePieContainer').collapse('hide');
            }
        }).fail(function (err) {
            $("#summary").html("Not available now ");
        }).always(function () {
            summaryDone = true;
            updateLoadingIndicator();
        });

        $.getJSON('@Url.Content("~/api/report/tender")' + param, function (result) {
            $("#tender").html(result.data);
        }).fail(function (err) {
            $("#tender").html("Not available now");
        }).always(function () {
            tenderDone = true;
            updateLoadingIndicator();
        });

        $.getJSON('@Url.Content("~/api/report/audit")' + param, function (result) {
            $("#audit").html(result.data);
        }).fail(function (err) {
            $("#audit").html("Not available now");
        }).always(function () {
            auditDone = true;
            updateLoadingIndicator();
        });
    }

    function updateLoadingIndicator() {
        if (summaryDone && tenderDone && auditDone) {
            hideLoading();
        }
    }

    function resetLoadStatus() {
        summaryDone = false;
        tenderDone = false;
        auditDone = false;
    }
</script>