<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="description" content="">
    <meta name="author" content="">

    <title></title>
    <link href="~/favicon.ico" rel="shortcut icon" type="image/x-icon" />
    <link rel="stylesheet" href="~/css/vendor.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/site.css" />
    <script src="~/js/vendor.js" asp-append-version="true"></script>
</head>

<body>
    <div id="root-content">
        <div class="layout-header">
            @(Html.DevExtreme().Toolbar()
            .Items(items =>
            {
                items.Add()
                .Html("<div>Report</div>")
                .Location(ToolbarItemLocation.Before)
                .CssClass("header-title");
                items.Add().Widget(w => w.Button().Icon("filter").ElementAttr("class", "toolbar-button")
                .OnClick("VerticalTec_POS_Report_Dashboard.toggleCriteria"))
                .LocateInMenu(ToolbarItemLocateInMenuMode.Never)
                .Location(ToolbarItemLocation.After);
            })
            )
            <div class="card" style="padding:0">
                <div id="criteria" class="collapse">
                    <div class="dx-fieldset">
                        <div class="dx-field">
                            <div class="dx-field-label">Select Shop</div>
                            <div class="dx-field-value">
                                @(Html.DevExtreme().SelectBox().Value(0)
                                .ID("slShop")
                                .DataSource(d => d.Mvc().Controller("Report").LoadAction("shopdata"))
                                .ValueExpr("shopId")
                                .DisplayExpr("shopName")
                                .SearchEnabled(false)
                                .Placeholder("Select Shop"))
                            </div>
                        </div>
                        <div class="dx-field">
                            <div class="dx-field-label">From Date</div>
                            <div class="dx-field-value">
                                @(Html.DevExtreme().DateBox()
                                .ID("fromDate")
                                .PickerType(DateBoxPickerType.Rollers)
                                .DisplayFormat("dd/MM/yyyy")
                                .Value(DateTime.Now)
                                )
                            </div>
                        </div>
                        <div class="dx-field">
                            <div class="dx-field-label">To Date</div>
                            <div class="dx-field-value">
                                @(Html.DevExtreme().DateBox()
                                .ID("toDate")
                                .PickerType(DateBoxPickerType.Rollers)
                                .DisplayFormat("dd/MM/yyyy")
                                .Value(DateTime.Now)
                                )
                            </div>
                        </div>
                    </div>
                    <div style="margin:0.5em;">
                        @(Html.DevExtreme().ScrollView()
                        .Direction(ScrollDirection.Horizontal)
                        .Content(@<text>
                            <div class="text-center">
                                @(Html.DevExtreme().ButtonGroup().KeyExpr("period")
                                .StylingMode(ButtonStylingMode.Text)
                                .FocusStateEnabled(true)
                                .Items(items =>
                                {
                                items.Add().Text("Last month").Option("period", "last_month");
                                items.Add().Text("This month").Option("period", "this_month");
                                items.Add().Text("Yesterday").Option("period", "yesterday");
                                items.Add().Text("Today").Option("period", "today");
                                }).SelectedItemKeys(new[] { "today" })
                                .OnItemClick("VerticalTec_POS_Report_Dashboard.periodGroupItemClick"))
                            </div>
                        </text>))
                    </div>
                </div>
                <div class="card-footer text-center">
                    @(Html.DevExtreme().Button()
                    .Text("Search")
                    .Width(230)
                    .ID("btn-search")
                    .Template(@<text>
                        @(Html.DevExtreme().LoadIndicator()
                        .ID("btn-search-indicator")
                        .Visible(false)
                        )
                        <span class="dx-button-text"><%= text %></span>
                    </text>).OnClick("VerticalTec_POS_Report_Dashboard.loadReportClick"))
                </div>
            </div>
        </div>
        <div class="layout-body">
            @(Html.DevExtreme().ScrollView()
            .OnScroll("VerticalTec_POS_Report_Dashboard.scrollViewOnScroll")
            .ScrollByContent(true)
            .ScrollByThumb(true)
            .Direction(ScrollDirection.Both)
            .Content(@<text>
                <div style="margin:0.5em;">
                    @RenderBody()
                </div>
            </text>))
        </div>
    </div>
    <script>
        var VerticalTec_POS_Report_Dashboard = (function () {

            let lastScrollOffset = 0;
            let isScrollUp = false;
            let isCriteriaShow = true;
            let summaryDone = false;
            let tenderDone = false;
            let auditDone = false;

            function init() {
                $('#criteria').on('hide.bs.collapse', function () {
                    isCriteriaShow = false;
                })
                $('#criteria').on('show.bs.collapse', function () {
                    isCriteriaShow = true;
                })

                $('#criteria').collapse('show');

                loadReport(loadReportCallback);
            }

            function toggleCriteria() {
                if (isCriteriaShow)
                    $('#criteria').collapse('hide');
                else
                    $('#criteria').collapse('show');
            }

            function scrollViewOnScroll(obj) {

                var scrollOffset = obj.scrollOffset.top;

                if (scrollOffset > lastScrollOffset)
                    isScrollUp = true;
                else if (scrollOffset < lastScrollOffset)
                    isScrollUp = false;

                if (isScrollUp) {
                    if (isCriteriaShow)
                        $('#criteria').collapse('hide');
                }
                if (obj.reachedTop) {
                    $('#criteria').collapse('show');
                }
                lastScrollOffset = scrollOffset;
            }

            function loadReport(loadCallback) {
                let shopIds = $("#slShop").dxSelectBox('instance').option('value');
                let fromDate = $("#fromDate").dxDateBox('instance').option('value').toISOString();
                let toDate = $("#toDate").dxDateBox('instance').option('value').toISOString();
                let param = '?shopIds=' + shopIds + '&startDate=' + fromDate + '&endDate=' + toDate;

                $.getJSON('@Url.Content("~/api/report/summary")' + param, function (result) {
                    var data = result.data;
                    $("#productSale").html(data.saleByGroupHtml);
                    $("#promotion").html(data.promoDataHtml);
                    $("#stat").html(data.statDataHtml);
                    var productSalePie = $("#productSalePie").dxPieChart("instance");
                    if (data.productSaleChartData.length > 0) {
                        productSalePie.option("dataSource", data.productSaleChartData);
                        $('#productSalePieContainer').collapse('show');
                    } else {
                        $('#productSalePieContainer').collapse('hide');
                    }
                }).fail(function (err) {
                    $("#summary").html("Not available now ");
                }).always(function () {
                    loadCallback('summary');
                });

                $.getJSON('@Url.Content("~/api/report/tender")' + param, function (result) {
                    $("#tender").html(result.data);
                }).fail(function (err) {
                    $("#tender").html("Not available now");
                }).always(function () {
                    loadCallback('tender');
                });

                $.getJSON('@Url.Content("~/api/report/audit")' + param, function (result) {
                    $("#audit").html(result.data);
                }).fail(function (err) {
                    $("#audit").html("Not available now");
                }).always(function () {
                    loadCallback('audit');
                });
            }

            function loadReportCallback (opt) {
                if (opt === 'summary')
                    summaryDone = true;
                if (opt === 'tender')
                    tenderDone = true;
                if (opt === 'audit')
                    auditDone = true;

                if (summaryDone && tenderDone && auditDone) {
                    $("#btn-search-indicator").dxLoadIndicator("option", "visible", false);
                    $("#btn-search").dxButton("option", "disabled", false);
                }
            }

            function resetLoadStatus() {
                summaryDone = false;
                tenderDone = false;
                auditDone = false;
            }

            function loadReportClick() {
                resetLoadStatus();
                $("#btn-search-indicator").dxLoadIndicator("option", "visible", true);
                $("#btn-search").dxButton("option", "disabled", true);
                loadReport(loadReportCallback);
            }

            function periodGroupItemClick(e) {
                let period = e.itemData.period;
                let year = moment().year();
                let month = moment().month();
                let day = moment().date();
                let daysInMonth = moment().daysInMonth();
                let lastMonth = moment().add(-1, 'month');
                let today = moment();
                let yesterday = moment().add(-1, 'days');
                switch (period) {
                    case "last_month":
                        $("#fromDate").dxDateBox("instance").option("value", moment(lastMonth).set('date', 1));
                        $("#toDate").dxDateBox("instance").option("value", new Date(lastMonth.year(), lastMonth.month(), lastMonth.daysInMonth()));
                        break;
                    case "this_month":
                        $("#fromDate").dxDateBox("instance").option("value", new Date(year, month, 1));
                        $("#toDate").dxDateBox("instance").option("value", new Date(year, month, day));
                        break;
                    case "yesterday":
                        $("#fromDate").dxDateBox("instance").option("value", yesterday);
                        $("#toDate").dxDateBox("instance").option("value", yesterday);
                        break;
                    case "today":
                        $("#fromDate").dxDateBox("instance").option("value", today);
                        $("#toDate").dxDateBox("instance").option("value", today);
                        break;
                }
            }

            return {
                init: init,
                toggleCriteria: toggleCriteria,
                loadReportClick: loadReportClick,
                scrollViewOnScroll: scrollViewOnScroll,
                periodGroupItemClick: periodGroupItemClick
            };
        })();

        $(document).ready(function () {
            VerticalTec_POS_Report_Dashboard.init();
        });
    </script>
</body>
</html>
