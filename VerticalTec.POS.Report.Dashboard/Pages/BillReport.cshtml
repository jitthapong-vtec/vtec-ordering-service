@page
@model VerticalTec.POS.Report.Dashboard.Pages.BillReportModel
@{
    ViewData["Title"] = "Bill";
}

<div class="mt-4 mb-4 ml-1 mr-1 text-center">
    <div id="report-type-scrollview">
        @(Html.DevExtreme().ButtonGroup().ID("btn-group-report-type").KeyExpr("group")
                                            .FocusStateEnabled(true)
                                            .Items(items =>
                                            {
                                                items.Add().Text("Group By Shop").Option("group", "1");
                                                items.Add().Text("Group By Date").Option("group", "2");
                                            }).SelectedItemKeys(new[] { "1" })
                                            .OnItemClick("groupItemClick"))
    </div>
</div>

<div id="billTree" class="mb-2"></div>

@(Html.DevExtreme().TreeList()
    .ID("billTree")
    .DataSource(new JS("dataSource"))
    .KeyExpr("id")
    .ParentIdExpr("parentId")
    .HasItemsExpr("hasItem")
    .ShowBorders(true)
    .Scrolling(scrolling => scrolling.Mode(TreeListScrollingMode.Standard))
    .Paging(paging => {
        paging.Enabled(true);
        paging.PageSize(500);
    })
    //.Pager(pager => {
    //    pager.ShowPageSizeSelector(true);
    //    pager.AllowedPageSizes(new[] { 5, 10, 20 });
    //    pager.ShowInfo(true);
    //})
    .RemoteOperations(r => r.Filtering(true))
    .ColumnAutoWidth(true)
    .WordWrapEnabled(true)
    .Columns(columns =>
    {
        columns.Add()
            .Caption("Description")
            .DataField("description");

        columns.Add()
            .Caption("Total Qty")
            .Alignment(HorizontalAlignment.Right)
            .DataField("totalQty");

        columns.Add()
            .Caption("Total Amount")
            .Alignment(HorizontalAlignment.Right)
            .DataField("totalAmount");
    })
    .RootValue("")
)

<script>
    var dataSource = new DevExpress.data.DataSource({
        store: new DevExpress.data.CustomStore({
            load: function (options) {
                let criteria = getCriteria();
                let shopName = criteria.shopName;
                let shopIds = criteria.shopIds.join(",");
                let fromDate = moment(criteria.fromDate);
                let toDate = moment(criteria.toDate);
                let reportType = criteria.reportType;
                let staffId = JSON.parse(localStorage.getItem('staff')).staffId;
                let url = '@Url.Content("~/api/report/bills")';

                $("#reportHeader").html("<b>" + shopName + "</b></br>" + moment(fromDate).format("D/M/Y") + " - " + moment(toDate).format("D/M/Y"));

                 return $.ajax({
                    url: url,
                     dataType: "json",
                     data: {
                         staffId: staffId,
                         shopIds: shopIds,
                         startDate: fromDate.toISOString(),
                         endDate: toDate.toISOString(),
                         reportType: reportType,
                         parentId: options.parentIds[0]
                     }
                });
            },
            onLoaded: function (result) {
            }
        })
    });

    function groupItemClick(e) {
        reportType = e.itemData.group;
        loadReportClick();
    }

    function loadReport() {
        dataSource.reload();
    }

    function pageLoaded() {
    }
</script>

