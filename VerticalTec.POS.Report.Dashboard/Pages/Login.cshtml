@page
@model VerticalTec.POS.Report.Dashboard.Pages.LoginModel
<div id="root-content">
    <div class="layout-header">
        @(Html.DevExtreme().Toolbar()
                .Items(items =>
                {
                    items.Add()
                    .Html("<div>Mobile Report</div>")
                    .Location(ToolbarItemLocation.Center)
                    .CssClass("header-title");
                })
        )
    </div>
    <div class="layout-body">
        <div class="card" style="margin:1em;">
            <b class="card-header">Login</b>
            <div class="card-body">
                <div class="dx-fieldset">
                    <div class="dx-field">
                        <div class="dx-field-label" style="width:100px;">User name</div>
                        <div class="dx-field-value">
                            @Html.DevExtreme().TextBox().ID("txtUsername").StylingMode(EditorStylingMode.Outlined).Placeholder("Username")
                        </div>
                    </div>
                </div>
                <div class="dx-fieldset">
                    <div class="dx-field">
                        <div class="dx-field-label" style="width:100px;">Password</div>
                        <div class="dx-field-value">
                            @Html.DevExtreme().TextBox().ID("txtPassword").StylingMode(EditorStylingMode.Outlined).Placeholder("Password").Mode(TextBoxMode.Password)
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-footer text-center">
                @Html.DevExtreme().Button().ID("btnLogin").Text("Login").Width(230).OnClick("login")
            </div>
        </div>
    </div>
</div>

@(Html.DevExtreme().Popup()
        .ID("login-popup")
        .Height("auto")
        .ShowTitle(true)
        .Title("Login")
        .Visible(false)
        .DragEnabled(false)
        .CloseOnOutsideClick(true)
)
<script>
    $(function () {
        let validateLogin = "validateLogin";
        $("#txtUsername").dxTextBox().dxValidator({
            validationRules: [{
                type: 'required',
                validateGroup: validateLogin,
                message: 'Please enter your user name'
            }]
        });
        $("#txtPassword").dxTextBox().dxValidator({
            validationRules: [{
                type: 'required',
                validateGroup: validateLogin,
                message: 'Please enter your password'
            }]
        });
    });

    function login(e) {
        let result = e.validationGroup.validate();
        if (result.isValid) {
            let payload = {
                "username": $("#txtUsername").dxTextBox('instance').option('value'),
                "password": $("#txtPassword").dxTextBox('instance').option('value')
            };
            let url = '@Url.Content("~/api/authen/login")';
            $.ajax({
                url,
                type: 'POST',
                contentType: 'application/json',
                dataType: 'json',
                data: JSON.stringify(payload),
                success: function (data) {
                    var staff = data.data;
                    sessionStorage.setItem('staff', JSON.stringify(staff));
                    var url = '@Url.Content("~/Index")';
                    location.href = url + "?staffId=" + staff.StaffID;
                }
            }).fail(function (err) {
                try {
                    let popup = $("#login-popup").dxPopup("instance");
                    popup.option("contentTemplate", JSON.parse(err.responseText).message);
                    popup.show();
                } catch (e) { }
            });
        }
    }
</script>